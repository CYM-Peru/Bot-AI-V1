# ==============================================
# SERVER CONFIGURATION
# ==============================================
PORT=3000
NODE_ENV=development

# ==============================================
# WHATSAPP CLOUD API CONFIGURATION
# ==============================================
# REQUIRED in production
# Prefer the WSP_* variables; WHATSAPP_* are accepted for backwards compatibility
WSP_BASE_URL=https://graph.facebook.com
WSP_API_VERSION=v20.0
WSP_PHONE_NUMBER_ID=
WSP_ACCESS_TOKEN=
WSP_VERIFY_TOKEN=

# Legacy fallbacks (optional)
WHATSAPP_ACCESS_TOKEN=
WHATSAPP_PHONE_NUMBER_ID=
WHATSAPP_VERIFY_TOKEN=
WHATSAPP_API_VERSION=v20.0

# ==============================================
# FLOW CONFIGURATION
# ==============================================
# The ID of the flow that will be used for new conversations
DEFAULT_FLOW_ID=default-flow

# Flow Storage
# Options: "local" (file system) or "database" (requires DB setup)
FLOW_STORAGE_TYPE=local
FLOW_STORAGE_PATH=./data/flows

# ==============================================
# SESSION CONFIGURATION
# ==============================================
# Options: "memory" (in-memory, not persistent), "file" (file-based), or "redis" (requires Redis)
SESSION_STORAGE_TYPE=file
SESSION_STORAGE_PATH=./data/sessions

# ==============================================
# DATABASE CONFIGURATION
# ==============================================
# Only required if using database storage
# DATABASE_URL=postgresql://user:password@localhost:5432/bot_ai
# DATABASE_POOL_SIZE=10

# ==============================================
# LOGGING CONFIGURATION
# ==============================================
# Log level: error, warn, info, http, debug
LOG_LEVEL=info

# Custom logs directory (optional, defaults to ./logs)
# LOGS_DIR=/var/log/bot-ai

# ==============================================
# STORAGE DIRECTORIES
# ==============================================
# Custom directories for secrets and data (optional)
# BACKEND_SECRETS_DIR=/etc/bot-ai/secrets
# BACKEND_DATA_DIR=/var/lib/bot-ai/data

# ==============================================
# WEBHOOK CONFIGURATION
# ==============================================
WEBHOOK_TIMEOUT_MS=10000

# ==============================================
# CORS CONFIGURATION
# ==============================================
# Comma-separated list of allowed origins
CORS_ORIGIN=http://localhost:5173

# ==============================================
# BITRIX24 INTEGRATION (Optional)
# ==============================================
# Get your webhook URL from Bitrix24 → Settings → Integration → Incoming webhook
BITRIX24_WEBHOOK_URL=

# Bitrix24 OAuth (para autenticación segura)
# Crear aplicación en: Bitrix24 → Configuración → Desarrolladores → Aplicaciones
BITRIX_CLIENT_ID=
BITRIX_CLIENT_SECRET=
BITRIX_REDIRECT_URI=http://localhost:3000/api/bitrix/oauth/callback

# ==============================================
# JWT AUTHENTICATION
# ==============================================
# REQUIRED in production
# Genera un secret seguro con: openssl rand -base64 32
# NEVER use the default value in production!
JWT_SECRET=your-super-secret-jwt-key-change-in-production
JWT_EXPIRES_IN=7d

# ==============================================
# SECURITY & RATE LIMITING
# ==============================================
# Trust proxy setting (set to 1 if behind nginx/load balancer)
# This is CRITICAL for rate limiting to work correctly
TRUST_PROXY=1

# ==============================================
# OPTIONAL: EXTERNAL SERVICES
# ==============================================
# Redis (if using Redis for sessions)
# REDIS_URL=redis://localhost:6379
# REDIS_PASSWORD=

# Email service (if implementing email notifications)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=
# SMTP_PASSWORD=
# SMTP_FROM=noreply@example.com
